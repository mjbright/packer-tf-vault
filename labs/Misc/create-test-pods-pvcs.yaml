kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: test-pvc-ebs-sc
  namespace: "default"
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: primary
spec:
  accessModes:
  - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
  storageClassName: ebs-sc
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: test-ebs
  name: test-ebs
spec:
  containers:
  - image: mjbright/k8s-demo:alpine1
    name: test-ebs
    volumeMounts:
    - name: pvc
      mountPath: /mnt/pvc

  volumes:
  - name: pvc
    persistentVolumeClaim:
      claimName: test-pvc-ebs-sc

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: test-pvc-gp2
  namespace: "default"
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: primary
spec:
  accessModes:
  - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
  storageClassName: gp2
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: test-gp2
  name: test-gp2
spec:
  containers:
  - image: mjbright/k8s-demo:alpine1
    name: test-gp2
    volumeMounts:
    - name: pvc
      mountPath: /mnt/pvc

  volumes:
  - name: pvc
    persistentVolumeClaim:
      claimName: test-pvc-gp2

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: test-pvc-gp3
  namespace: "default"
  labels:
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/name: mysql
    app.kubernetes.io/component: primary
spec:
  accessModes:
  - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
  storageClassName: gp3
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: test-gp3
  name: test-gp3
spec:
  containers:
  - image: mjbright/k8s-demo:alpine1
    name: test-gp3
    volumeMounts:
    - name: pvc
      mountPath: /mnt/pvc

  volumes:
  - name: pvc
    persistentVolumeClaim:
      claimName: test-pvc-gp3

